{"version":3,"sources":["js/data/places.js","js/component/locationitem.js","js/component/locationlist.js","js/component/header.js","App.js","serviceWorker.js","index.js"],"names":["places_data","name","type","position","lat","lng","LocationItem","react_default","a","createElement","role","className","tabIndex","onKeyPress","this","props","openInfoWindow","bind","data","marker","onClick","React","Component","LocationList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","locations","query","suggestions","filterLocations","assertThisInitialized","event","closeInfoWindow","value","target","alllocations","forEach","location","longname","toLowerCase","indexOf","setVisible","push","setState","hide","show","locationlist","map","listItem","index","locationitem_LocationItem","key","rolele","aria-labelledby","id","placeholder","onChange","Header","href","onToggle","App","showSideBar","infowindow","prevmarker","onSideBarToggle","initMap","window","src","ref","document","getElementsByTagName","script","async","onerror","write","parentNode","insertBefore","loadMapJS","self","mapview","getElementById","style","height","innerHeight","google","maps","Map","center","zoom","mapTypeControl","InfoWindow","addListener","addDomListener","getCenter","trigger","setCenter","Marker","LatLng","animation","Animation","DROP","title","display","prevState","open","setAnimation","BOUNCE","setContent","getPosition","getMarkerInfo","concat","close","header_Header","locationlist_LocationList","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.85c86a17.chunk.js","sourcesContent":["let places_data = [\r\n  {\r\n    name: \"Shopping Vitória\", // Nome do lugar\r\n    type: \"Shooping\",\r\n    position: {\r\n      lat: -20.3126281,\r\n      lng: -40.2876417\r\n    },\r\n  },\r\n  {\r\n    name: \"Shopping Mestre Alvaro\",\r\n    position: {\r\n      lat: -20.240031, \r\n      lng: -40.274900\r\n    },\r\n  },\r\n  {\r\n    name: \"Shopping Praia da costa\",\r\n    position: {\r\n      lat: -20.341704,\r\n      lng: -40.288580\r\n    },\r\n  },\r\n  {\r\n    name: \"Pier de Iemanjá\",\r\n    position: {\r\n      lat: -20.292819,\r\n      lng: -40.288571\r\n    },\r\n  },\r\n  {\r\n    name: \"Parque Botânico da vale\",\r\n    position: {\r\n      lat: -20.257970,\r\n      lng: -40.260103\r\n    },\r\n  },\r\n  {\r\n    name: \"Parque Moscoso\",\r\n    position: {\r\n      lat: -20.318764,\r\n      lng: -40.341965\r\n    },\r\n  },\r\n  {\r\n    name: \"Projeto Tamar Vitória\",\r\n    position: {\r\n      lat: -20.318772,\r\n      lng: -40.295994\r\n    },\r\n  },\r\n  {\r\n    name: \"Aeroporto de Vitória\",\r\n    position: {\r\n      lat: -20.256669,\r\n      lng: -40.283448\r\n    },\r\n  }\r\n];\r\n\r\nexport default places_data;","import React from 'react';\r\n\r\nexport default class LocationItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <li role=\"button\"\r\n                className=\"place\"\r\n                tabIndex=\"0\"\r\n                onKeyPress={this.props.openInfoWindow.bind(this, this.props.data.marker)}\r\n                onClick={this.props.openInfoWindow.bind(this, this.props.data.marker)}>\r\n                <p\r\n                    className='place-link'>\r\n                    {this.props.data.name}\r\n                </p>\r\n            </li>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport LocationItem from '../component/locationitem';\r\n\r\nexport default class LocationList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'locations': '',\r\n            'query': '',\r\n            'suggestions': true,\r\n        };\r\n\r\n        this.filterLocations = this.filterLocations.bind(this);\r\n    }\r\n\r\n    filterLocations(event) {\r\n        this.props.closeInfoWindow();\r\n        const { value } = event.target;\r\n        let locations = [];\r\n        this.props.alllocations.forEach(function (location) {\r\n            if (location.longname.toLowerCase().indexOf(value.toLowerCase()) >= 0) {\r\n                location.marker.setVisible(true);\r\n                locations.push(location);\r\n            } else {\r\n                location.marker.setVisible(false);\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            'locations': locations,\r\n            'query': value\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            'locations': this.props.alllocations\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const hide = this.props.show ? ' sidebar-show' : ' sidebar-hide';\r\n\r\n        let locationlist = this.state.locations.map(function (listItem, index) {\r\n            return (\r\n                <LocationItem key={index} openInfoWindow={this.props.openInfoWindow.bind(this)} data={listItem} />\r\n            );\r\n        }, this);\r\n\r\n        return (\r\n            <nav rolele='navigation' className={'sidebar' + hide}>\r\n\r\n                <form className=\"filter-container\">\r\n                    <input className=\"filter\"\r\n                        role=\"search\"\r\n                        aria-labelledby=\"filter\"\r\n                        id=\"search-field\"\r\n                        type=\"text\"\r\n                        placeholder=\"Busca\"\r\n                        value={this.state.query}\r\n                        onChange={this.filterLocations} />\r\n                </form>\r\n                <ul rolele='filter-list' className='places'>\r\n                    {this.state.suggestions && locationlist}\r\n                </ul>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className='topbar'>\r\n                <a href=\"#\" className=\"menu\" onClick={this.props.onToggle}>&#9776;</a>\r\n                <h1 className='title'>ES</h1>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport places_data from './js/data/places';\r\nimport LocationList from './js/component/locationlist';\r\nimport Header from './js/component/header';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showSideBar: false,\r\n      alllocations: places_data,\r\n      map: '',\r\n      infowindow: '',\r\n      prevmarker: ''\r\n    };\r\n\r\n    this.onSideBarToggle = this.onSideBarToggle.bind(this);\r\n\r\n    this.initMap = this.initMap.bind(this);\r\n    this.openInfoWindow = this.openInfoWindow.bind(this);\r\n    this.closeInfoWindow = this.closeInfoWindow.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.initMap = this.initMap;\r\n    loadMapJS('https://maps.googleapis.com/maps/api/js?key=AIzaSyBI-ESl0gKLZ3yYBLiTZ1CuQ0svL-NkNKE&callback=initMap')\r\n  }\r\n\r\n  initMap() {\r\n    var self = this;\r\n\r\n    var mapview = document.getElementById('map');\r\n    mapview.style.height = window.innerHeight + \"px\";\r\n    var map = new window.google.maps.Map(mapview, {\r\n      center: { lat: -20.3175257, lng: -40.3314534 },\r\n      zoom: 12,\r\n      mapTypeControl: false\r\n    });\r\n\r\n    var InfoWindow = new window.google.maps.InfoWindow({});\r\n\r\n    window.google.maps.event.addListener(InfoWindow, 'closeclick', function () {\r\n      self.closeInfoWindow();\r\n    });\r\n\r\n    this.setState({\r\n      'map': map,\r\n      'infowindow': InfoWindow\r\n    });\r\n\r\n    window.google.maps.event.addDomListener(window, \"resize\", function () {\r\n      var center = map.getCenter();\r\n      window.google.maps.event.trigger(map, \"resize\");\r\n      self.state.map.setCenter(center);\r\n    });\r\n\r\n    window.google.maps.event.addListener(map, 'click', function () {\r\n      self.closeInfoWindow();\r\n    });\r\n\r\n    var alllocations = [];\r\n\r\n    this.state.alllocations.forEach(function (location) {\r\n      var longname = location.name;\r\n      var marker = new window.google.maps.Marker({\r\n        position: new window.google.maps.LatLng(location.position.lat, location.position.lng),\r\n        animation: window.google.maps.Animation.DROP,\r\n        map: map,\r\n        title: longname,\r\n      });\r\n\r\n      location.longname = longname;\r\n      location.marker = marker;\r\n      location.display = true;\r\n\r\n      marker.addListener('click', function () {\r\n        self.openInfoWindow(marker);\r\n      });\r\n\r\n      alllocations.push(location);\r\n    });\r\n    this.setState({\r\n      'alllocations': alllocations\r\n    });\r\n  }\r\n\r\n  onSideBarToggle() {\r\n    this.setState(function (prevState, props) {\r\n      return {\r\n        showSideBar: (prevState.showSideBar ? false : true)\r\n      };\r\n    });\r\n  }\r\n\r\n  openInfoWindow(marker) {\r\n    this.closeInfoWindow();\r\n    this.state.infowindow.open(this.state.map, marker);\r\n    marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n    this.setState({\r\n      'prevmarker': marker\r\n    });\r\n    this.state.infowindow.setContent('Loading Data...');\r\n    this.state.map.setCenter(marker.getPosition());\r\n    this.getMarkerInfo(marker);\r\n  }\r\n\r\n  getMarkerInfo(marker) {\r\n    var self = this;\r\n    let title = `<h3>${marker.title}</h3>`\r\n\r\n    self.state.infowindow.setContent(title);\r\n  }\r\n\r\n  closeInfoWindow() {\r\n    if (this.state.prevmarker) {\r\n      this.state.prevmarker.setAnimation(null);\r\n    }\r\n    this.setState({\r\n      'prevmarker': ''\r\n    });\r\n    this.state.infowindow.close();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <section className='container'>\r\n\r\n          <Header onToggle={this.onSideBarToggle} ></Header>\r\n\r\n          <LocationList show={this.state.showSideBar}\r\n            key=\"100\" alllocations={this.state.alllocations}\r\n            openInfoWindow={this.openInfoWindow}\r\n            closeInfoWindow={this.closeInfoWindow} />\r\n\r\n          <div rolele=\"application\" id=\"map\"></div>\r\n          \r\n        </section>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nfunction loadMapJS(src) {\r\n  var ref = window.document.getElementsByTagName(\"script\")[0];\r\n  var script = window.document.createElement(\"script\");\r\n  script.src = src;\r\n  script.async = true;\r\n  script.onerror = function () {\r\n    document.write(\"Google Maps can't be loaded\");\r\n  };\r\n  ref.parentNode.insertBefore(script, ref);\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}